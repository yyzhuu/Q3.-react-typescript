{"ast":null,"code":"var _jsxFileName = \"/Users/yaoyuzhu/react-typescript/react-typescript-demo/src/components/WalletPage.tsx\";\nimport React from 'react';\nimport { formatBalances } from '../utilities/utilities';\nimport WalletRow from './WalletRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPage = ({\n  balances,\n  prices\n}) => {\n  const formattedBalances = formatBalances(balances);\n  const rows = formattedBalances.map((balance, index) => {\n    const usdValue = prices[balance.currency] * balance.amount;\n    return /*#__PURE__*/_jsxDEV(WalletRow, {\n      className: \"wallet-row\" // Use your CSS classes as needed\n      ,\n\n      amount: balance.amount,\n      usdValue: usdValue,\n      formattedAmount: balance.formatted\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["React","formatBalances","WalletRow","jsxDEV","_jsxDEV","WalletPage","balances","prices","formattedBalances","rows","map","balance","index","usdValue","currency","amount","className","formattedAmount","formatted","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/yaoyuzhu/react-typescript/react-typescript-demo/src/components/WalletPage.tsx"],"sourcesContent":["import React from 'react';\nimport { FormattedWalletBalance, WalletBalance } from '../utilities/interface';\nimport { formatBalances } from '../utilities/utilities';\nimport WalletRow from './WalletRow';\n\ninterface Props {\n    balances: WalletBalance[];\n    prices: { [key: string]: number };\n}\n\nconst WalletPage: React.FC<Props> = ({ balances, prices }) => {\n    const formattedBalances = formatBalances(balances);\n\n    const rows = formattedBalances.map((balance: FormattedWalletBalance, index: number) => {\n        const usdValue = prices[balance.currency] * balance.amount;\n        return (\n            <WalletRow \n                className=\"wallet-row\" // Use your CSS classes as needed\n                key={index}\n                amount={balance.amount}\n                usdValue={usdValue}\n                formattedAmount={balance.formatted}\n            />\n        );\n    });\n\n    return (\n        <div>\n            {rows}\n        </div>\n    );\n};\n\nexport default WalletPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpC,MAAMC,UAA2B,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAC1D,MAAMC,iBAAiB,GAAGP,cAAc,CAACK,QAAQ,CAAC;EAElD,MAAMG,IAAI,GAAGD,iBAAiB,CAACE,GAAG,CAAC,CAACC,OAA+B,EAAEC,KAAa,KAAK;IACnF,MAAMC,QAAQ,GAAGN,MAAM,CAACI,OAAO,CAACG,QAAQ,CAAC,GAAGH,OAAO,CAACI,MAAM;IAC1D,oBACIX,OAAA,CAACF,SAAS;MACNc,SAAS,EAAC,YAAY,CAAC;MAAA;;MAEvBD,MAAM,EAAEJ,OAAO,CAACI,MAAO;MACvBF,QAAQ,EAAEA,QAAS;MACnBI,eAAe,EAAEN,OAAO,CAACO;IAAU,GAH9BN,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CAAC;EAEV,CAAC,CAAC;EAEF,oBACIlB,OAAA;IAAAmB,QAAA,EACKd;EAAI;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACE,EAAA,GArBInB,UAA2B;AAuBjC,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}