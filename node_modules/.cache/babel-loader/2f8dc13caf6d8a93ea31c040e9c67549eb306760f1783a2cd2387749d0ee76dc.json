{"ast":null,"code":"export const getPriority = blockchain => {\n  switch (blockchain) {\n    case 'Osmosis':\n      return 100;\n    case 'Ethereum':\n      return 50;\n    case 'Arbitrum':\n      return 30;\n    case 'Zilliqa':\n      return 20;\n    case 'Neo':\n      return 20;\n    default:\n      return -99;\n  }\n};\nexport const formatBalances = balances => {\n  return balances.map(balance => {\n    // Check if amount is a number before calling toFixed\n    const formattedAmount = typeof balance.amount === 'number' ? balance.amount.toFixed(2) : '0.00';\n    return {\n      ...balance,\n      formatted: formattedAmount // Format the amount to two decimal places\n    };\n  });\n};","map":{"version":3,"names":["getPriority","blockchain","formatBalances","balances","map","balance","formattedAmount","amount","toFixed","formatted"],"sources":["/Users/yaoyuzhu/react-typescript/react-typescript-demo/src/utilities/utilities.ts"],"sourcesContent":["import { FormattedWalletBalance, WalletBalance } from './interface';\n\nexport const getPriority = (blockchain: string): number => {\n    switch (blockchain) {\n        case 'Osmosis':\n            return 100;\n        case 'Ethereum':\n            return 50;\n        case 'Arbitrum':\n            return 30;\n        case 'Zilliqa':\n            return 20;\n        case 'Neo':\n            return 20;\n        default:\n            return -99;\n    }\n};\nexport const formatBalances = (balances: WalletBalance[]): FormattedWalletBalance[] => {\n    return balances.map(balance => {\n        // Check if amount is a number before calling toFixed\n        const formattedAmount = typeof balance.amount === 'number' ? balance.amount.toFixed(2) : '0.00';\n\n        return {\n            ...balance,\n            formatted: formattedAmount, // Format the amount to two decimal places\n        };\n    });\n};"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAIC,UAAkB,IAAa;EACvD,QAAQA,UAAU;IACd,KAAK,SAAS;MACV,OAAO,GAAG;IACd,KAAK,UAAU;MACX,OAAO,EAAE;IACb,KAAK,UAAU;MACX,OAAO,EAAE;IACb,KAAK,SAAS;MACV,OAAO,EAAE;IACb,KAAK,KAAK;MACN,OAAO,EAAE;IACb;MACI,OAAO,CAAC,EAAE;EAClB;AACJ,CAAC;AACD,OAAO,MAAMC,cAAc,GAAIC,QAAyB,IAA+B;EACnF,OAAOA,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAI;IAC3B;IACA,MAAMC,eAAe,GAAG,OAAOD,OAAO,CAACE,MAAM,KAAK,QAAQ,GAAGF,OAAO,CAACE,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM;IAE/F,OAAO;MACH,GAAGH,OAAO;MACVI,SAAS,EAAEH,eAAe,CAAE;IAChC,CAAC;EACL,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}