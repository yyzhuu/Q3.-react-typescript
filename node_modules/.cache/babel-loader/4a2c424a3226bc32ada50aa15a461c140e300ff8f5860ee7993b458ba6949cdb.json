{"ast":null,"code":"var _jsxFileName = \"/Users/yaoyuzhu/react-typescript/react-typescript-demo/src/App.tsx\",\n  _s = $RefreshSig$();\n// WalletPage.tsx\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useWalletBalances from './components/UseWalletBalances';\nimport WalletRow from './components/WalletRow';\nimport Datasource from './utilities/Datasource';\nimport { formatBalances, getPriority } from './utilities/utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPage = props => {\n  _s();\n  const {\n    children,\n    ...rest\n  } = props;\n  const balances = useWalletBalances(); // Assuming this hook is defined elsewhere\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    const datasource = new Datasource(\"https://interview.switcheo.com/prices.json\");\n    datasource.getPrices().then(prices => {\n      setPrices(prices);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const sortedBalances = useMemo(() => {\n    return balances.filter(balance => {\n      const balancePriority = getPriority(balance.currency);\n      return balancePriority > -99 && balance.amount > 0;\n    }).sort((lhs, rhs) => {\n      const leftPriority = getPriority(lhs.currency);\n      const rightPriority = getPriority(rhs.currency);\n      return rightPriority - leftPriority;\n    });\n  }, [balances]);\n  const formattedBalances = formatBalances(sortedBalances);\n  const rows = formattedBalances.map((balance, index) => {\n    const usdValue = prices[balance.currency] * balance.amount;\n    return /*#__PURE__*/_jsxDEV(WalletRow, {\n      className: \"wallet-row\" // Use your CSS classes as needed\n      ,\n\n      amount: balance.amount,\n      usdValue: usdValue,\n      formattedAmount: balance.formatted\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletPage, \"Ez9Baf7OAZOtoBfRhz0jU93x6Jo=\", false, function () {\n  return [useWalletBalances];\n});\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useWalletBalances","WalletRow","Datasource","formatBalances","getPriority","jsxDEV","_jsxDEV","WalletPage","props","_s","children","rest","balances","prices","setPrices","datasource","getPrices","then","catch","error","console","sortedBalances","filter","balance","balancePriority","currency","amount","sort","lhs","rhs","leftPriority","rightPriority","formattedBalances","rows","map","index","usdValue","className","formattedAmount","formatted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yaoyuzhu/react-typescript/react-typescript-demo/src/App.tsx"],"sourcesContent":["// WalletPage.tsx\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useWalletBalances from './components/UseWalletBalances';\nimport WalletRow from './components/WalletRow';\nimport Datasource from './utilities/Datasource';\nimport { FormattedWalletBalance, WalletBalance } from './utilities/interface';\nimport { formatBalances, getPriority } from './utilities/utilities';\ninterface Props extends React.HTMLProps<HTMLDivElement> {}\n\nconst WalletPage: React.FC<Props> = (props: Props) => {\n    const { children, ...rest } = props;\n    const balances = useWalletBalances(); // Assuming this hook is defined elsewhere\n    const [prices, setPrices] = useState<{ [key: string]: number }>({});\n\n    useEffect(() => {\n        const datasource = new Datasource(\"https://interview.switcheo.com/prices.json\");\n        datasource.getPrices().then(prices => {\n            setPrices(prices);\n        }).catch(error => {\n            console.error(error);\n        });\n    }, []);\n\n    const sortedBalances = useMemo(() => {\n        return balances.filter((balance: WalletBalance) => {\n            const balancePriority = getPriority(balance.currency);\n            return balancePriority > -99 && balance.amount > 0;\n        }).sort((lhs: WalletBalance, rhs: WalletBalance) => {\n            const leftPriority = getPriority(lhs.currency);\n            const rightPriority = getPriority(rhs.currency);\n            return rightPriority - leftPriority;\n        });\n    }, [balances]);\n\n    const formattedBalances = formatBalances(sortedBalances);\n\n    const rows = formattedBalances.map((balance: FormattedWalletBalance, index: number) => {\n        const usdValue = prices[balance.currency] * balance.amount;\n        return (\n            <WalletRow \n                className=\"wallet-row\" // Use your CSS classes as needed\n                key={index}\n                amount={balance.amount}\n                usdValue={usdValue}\n                formattedAmount={balance.formatted}\n            />\n        );\n    });\n\n    return (\n        <div {...rest}>\n            {rows}\n        </div>\n    );\n};\n\nexport default WalletPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,SAASC,cAAc,EAAEC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpE,MAAMC,UAA2B,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGH,KAAK;EACnC,MAAMI,QAAQ,GAAGZ,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAA4B,CAAC,CAAC,CAAC;EAEnEF,SAAS,CAAC,MAAM;IACZ,MAAMkB,UAAU,GAAG,IAAIb,UAAU,CAAC,4CAA4C,CAAC;IAC/Ea,UAAU,CAACC,SAAS,CAAC,CAAC,CAACC,IAAI,CAACJ,MAAM,IAAI;MAClCC,SAAS,CAACD,MAAM,CAAC;IACrB,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAGvB,OAAO,CAAC,MAAM;IACjC,OAAOc,QAAQ,CAACU,MAAM,CAAEC,OAAsB,IAAK;MAC/C,MAAMC,eAAe,GAAGpB,WAAW,CAACmB,OAAO,CAACE,QAAQ,CAAC;MACrD,OAAOD,eAAe,GAAG,CAAC,EAAE,IAAID,OAAO,CAACG,MAAM,GAAG,CAAC;IACtD,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,GAAkB,EAAEC,GAAkB,KAAK;MAChD,MAAMC,YAAY,GAAG1B,WAAW,CAACwB,GAAG,CAACH,QAAQ,CAAC;MAC9C,MAAMM,aAAa,GAAG3B,WAAW,CAACyB,GAAG,CAACJ,QAAQ,CAAC;MAC/C,OAAOM,aAAa,GAAGD,YAAY;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,MAAMoB,iBAAiB,GAAG7B,cAAc,CAACkB,cAAc,CAAC;EAExD,MAAMY,IAAI,GAAGD,iBAAiB,CAACE,GAAG,CAAC,CAACX,OAA+B,EAAEY,KAAa,KAAK;IACnF,MAAMC,QAAQ,GAAGvB,MAAM,CAACU,OAAO,CAACE,QAAQ,CAAC,GAAGF,OAAO,CAACG,MAAM;IAC1D,oBACIpB,OAAA,CAACL,SAAS;MACNoC,SAAS,EAAC,YAAY,CAAC;MAAA;;MAEvBX,MAAM,EAAEH,OAAO,CAACG,MAAO;MACvBU,QAAQ,EAAEA,QAAS;MACnBE,eAAe,EAAEf,OAAO,CAACgB;IAAU,GAH9BJ,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CAAC;EAEV,CAAC,CAAC;EAEF,oBACIrC,OAAA;IAAA,GAASK,IAAI;IAAAD,QAAA,EACRuB;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClC,EAAA,CA7CIF,UAA2B;EAAA,QAEZP,iBAAiB;AAAA;AAAA4C,EAAA,GAFhCrC,UAA2B;AA+CjC,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}